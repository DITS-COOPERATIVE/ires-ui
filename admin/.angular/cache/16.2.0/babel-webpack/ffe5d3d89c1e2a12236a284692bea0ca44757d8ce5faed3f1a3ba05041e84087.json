{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TransactionsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getTransactionsList() {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/transactions`);\n  }\n  getTransaction(transactionId) {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/transactions/${transactionId}`);\n  }\n  saveTransaction(inputData) {\n    return this.httpClient.post(`http://127.0.0.1:8000/api/transactions`, inputData);\n  }\n  updateTransaction(inputData, transactionId) {\n    return this.httpClient.put(`http://127.0.0.1:8000/api/transactions/${transactionId}`, inputData);\n  }\n  destroyTransaction(transactionId) {\n    return this.httpClient.delete(`http://127.0.0.1:8000/api/transactions/${transactionId}`);\n  }\n}\n_class = TransactionsService;\n_class.ɵfac = function TransactionsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TransactionsService","constructor","httpClient","getTransactionsList","get","getTransaction","transactionId","saveTransaction","inputData","post","updateTransaction","put","destroyTransaction","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Capstone\\Desktop\\DITS\\ires-ui\\admin\\src\\app\\services\\transactions\\transactions.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nexport interface TransactionsResponse {\n  \"id\": number,\n  \"sale_id\": any,\n  \"amount_rendered\": number,\n  \"change\": number,\n  \"created_at\": string,\n  \"updated_at\": string,\n    \"sale\": {\n      \"id\": number,\n      \"order_id\": number,\n      \"total_price\": number,\n      \"total_points\": number,\n      \"created_at\": string,\n      \"updated_at\": string,\n        \"orders\": {\n        \"id\": number,\n        \"customer_id\": number,\n        \"product_id\": number,\n        \"quantity\": number,\n        \"created_at\": string,\n        \"updated_at\": string,\n          \"customer\": {\n          \"id\": number,\n          \"first_name\": string,\n          \"last_name\": string,\n          \"gender\": string,\n          \"email\": string,\n          \"mobile_no\": string,\n          \"birth_date\": string,\n          \"address\": string,\n          \"privilege\": string,\n          \"points\": number,\n          \"created_at\": string,\n          \"updated_at\": string\n            },\n            \"product\": {\n            \"id\": number,\n            \"name\": string,\n            \"code\": string,\n            \"model\": string,\n            \"price\": number,\n            \"quantity\": number,\n            \"points\": number,\n            \"created_at\": string,\n            \"updated_at\": string,\n            }\n          }\n        }\n      }\n\nexport interface TransactionsResponseType {\n  status: number,\n  result: TransactionsResponse []\n}\n\nexport interface TransactionEditResponse {\n  status: number,\n  result: TransactionsResponse[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionsService {\n\n  constructor( private httpClient: HttpClient ) {}\n\n  getTransactionsList() {\n\n    return  this.httpClient.get<TransactionsResponseType>(`http://127.0.0.1:8000/api/transactions`);\n  }\n\n  getTransaction(transactionId : number) {\n\n    return  this.httpClient.get<TransactionEditResponse>(`http://127.0.0.1:8000/api/transactions/${transactionId}`);\n  }\n\n  saveTransaction(inputData: object){\n    \n    return  this.httpClient.post(`http://127.0.0.1:8000/api/transactions`, inputData);\n  }\n\n  updateTransaction(inputData: object, transactionId: number) {\n\n    return  this.httpClient.put(`http://127.0.0.1:8000/api/transactions/${transactionId}`, inputData);\n  }\n\n  destroyTransaction(transactionId: number) {\n\n    return  this.httpClient.delete(`http://127.0.0.1:8000/api/transactions/${transactionId}`);\n  }\n}\n"],"mappings":";;;AAkEA,OAAM,MAAOA,mBAAmB;EAE9BC,YAAqBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE/CC,mBAAmBA,CAAA;IAEjB,OAAQ,IAAI,CAACD,UAAU,CAACE,GAAG,CAA2B,wCAAwC,CAAC;EACjG;EAEAC,cAAcA,CAACC,aAAsB;IAEnC,OAAQ,IAAI,CAACJ,UAAU,CAACE,GAAG,CAA0B,0CAA0CE,aAAa,EAAE,CAAC;EACjH;EAEAC,eAAeA,CAACC,SAAiB;IAE/B,OAAQ,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,wCAAwC,EAAED,SAAS,CAAC;EACnF;EAEAE,iBAAiBA,CAACF,SAAiB,EAAEF,aAAqB;IAExD,OAAQ,IAAI,CAACJ,UAAU,CAACS,GAAG,CAAC,0CAA0CL,aAAa,EAAE,EAAEE,SAAS,CAAC;EACnG;EAEAI,kBAAkBA,CAACN,aAAqB;IAEtC,OAAQ,IAAI,CAACJ,UAAU,CAACW,MAAM,CAAC,0CAA0CP,aAAa,EAAE,CAAC;EAC3F;;SA3BWN,mBAAmB;;mBAAnBA,MAAmB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAnBjB,MAAmB;EAAAkB,OAAA,EAAnBlB,MAAmB,CAAAmB,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}