{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (v2.0.1): rgbToHex.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\nvar rgbToHex = function (color) {\n  if (typeof color === 'undefined') {\n    throw new TypeError('Hex color is not defined');\n  }\n  if (color === 'transparent') {\n    return '#00000000';\n  }\n  var rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n  if (!rgb) {\n    throw new Error(\"\".concat(color, \" is not a valid rgb color\"));\n  }\n  var r = \"0\".concat(parseInt(rgb[1], 10).toString(16));\n  var g = \"0\".concat(parseInt(rgb[2], 10).toString(16));\n  var b = \"0\".concat(parseInt(rgb[3], 10).toString(16));\n  return \"#\".concat(r.slice(-2)).concat(g.slice(-2)).concat(b.slice(-2));\n};\nexport { rgbToHex as default };","map":{"version":3,"names":["rgbToHex","color","TypeError","rgb","match","Error","concat","r","parseInt","toString","g","b","slice","default"],"sources":["C:/Users/Capstone/Desktop/DITS/ires-ui/admin/node_modules/@coreui/utils/dist/esm/rgbToHex.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (v2.0.1): rgbToHex.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\nvar rgbToHex = function (color) {\n    if (typeof color === 'undefined') {\n        throw new TypeError('Hex color is not defined');\n    }\n    if (color === 'transparent') {\n        return '#00000000';\n    }\n    var rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n    if (!rgb) {\n        throw new Error(\"\".concat(color, \" is not a valid rgb color\"));\n    }\n    var r = \"0\".concat(parseInt(rgb[1], 10).toString(16));\n    var g = \"0\".concat(parseInt(rgb[2], 10).toString(16));\n    var b = \"0\".concat(parseInt(rgb[3], 10).toString(16));\n    return \"#\".concat(r.slice(-2)).concat(g.slice(-2)).concat(b.slice(-2));\n};\n\nexport { rgbToHex as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,QAAQ,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAC5B,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;IAC9B,MAAM,IAAIC,SAAS,CAAC,0BAA0B,CAAC;EACnD;EACA,IAAID,KAAK,KAAK,aAAa,EAAE;IACzB,OAAO,WAAW;EACtB;EACA,IAAIE,GAAG,GAAGF,KAAK,CAACG,KAAK,CAAC,sEAAsE,CAAC;EAC7F,IAAI,CAACD,GAAG,EAAE;IACN,MAAM,IAAIE,KAAK,CAAC,EAAE,CAACC,MAAM,CAACL,KAAK,EAAE,2BAA2B,CAAC,CAAC;EAClE;EACA,IAAIM,CAAC,GAAG,GAAG,CAACD,MAAM,CAACE,QAAQ,CAACL,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAACM,QAAQ,CAAC,EAAE,CAAC,CAAC;EACrD,IAAIC,CAAC,GAAG,GAAG,CAACJ,MAAM,CAACE,QAAQ,CAACL,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAACM,QAAQ,CAAC,EAAE,CAAC,CAAC;EACrD,IAAIE,CAAC,GAAG,GAAG,CAACL,MAAM,CAACE,QAAQ,CAACL,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAACM,QAAQ,CAAC,EAAE,CAAC,CAAC;EACrD,OAAO,GAAG,CAACH,MAAM,CAACC,CAAC,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACN,MAAM,CAACI,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACN,MAAM,CAACK,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC;AAED,SAASZ,QAAQ,IAAIa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}