{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (v2.0.1): hexToRgb.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n/* eslint-disable no-magic-numbers */\nvar hexToRgb = function (color) {\n  if (typeof color === 'undefined') {\n    throw new TypeError('Hex color is not defined');\n  }\n  color.match(/^#(?:[0-9a-f]{3}){1,2}$/i);\n  var r;\n  var g;\n  var b;\n  if (color.length === 7) {\n    r = parseInt(color.slice(1, 3), 16);\n    g = parseInt(color.slice(3, 5), 16);\n    b = parseInt(color.slice(5, 7), 16);\n  } else {\n    r = parseInt(color.slice(1, 2), 16);\n    g = parseInt(color.slice(2, 3), 16);\n    b = parseInt(color.slice(3, 5), 16);\n  }\n  return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n};\nexport { hexToRgb as default };","map":{"version":3,"names":["hexToRgb","color","TypeError","match","r","g","b","length","parseInt","slice","concat","default"],"sources":["C:/Users/Capstone/Desktop/DITS/ires-ui/admin/node_modules/@coreui/utils/dist/esm/hexToRgb.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (v2.0.1): hexToRgb.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n/* eslint-disable no-magic-numbers */\nvar hexToRgb = function (color) {\n    if (typeof color === 'undefined') {\n        throw new TypeError('Hex color is not defined');\n    }\n    color.match(/^#(?:[0-9a-f]{3}){1,2}$/i);\n    var r;\n    var g;\n    var b;\n    if (color.length === 7) {\n        r = parseInt(color.slice(1, 3), 16);\n        g = parseInt(color.slice(3, 5), 16);\n        b = parseInt(color.slice(5, 7), 16);\n    }\n    else {\n        r = parseInt(color.slice(1, 2), 16);\n        g = parseInt(color.slice(2, 3), 16);\n        b = parseInt(color.slice(3, 5), 16);\n    }\n    return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n};\n\nexport { hexToRgb as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,QAAQ,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAC5B,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;IAC9B,MAAM,IAAIC,SAAS,CAAC,0BAA0B,CAAC;EACnD;EACAD,KAAK,CAACE,KAAK,CAAC,0BAA0B,CAAC;EACvC,IAAIC,CAAC;EACL,IAAIC,CAAC;EACL,IAAIC,CAAC;EACL,IAAIL,KAAK,CAACM,MAAM,KAAK,CAAC,EAAE;IACpBH,CAAC,GAAGI,QAAQ,CAACP,KAAK,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IACnCJ,CAAC,GAAGG,QAAQ,CAACP,KAAK,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IACnCH,CAAC,GAAGE,QAAQ,CAACP,KAAK,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EACvC,CAAC,MACI;IACDL,CAAC,GAAGI,QAAQ,CAACP,KAAK,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IACnCJ,CAAC,GAAGG,QAAQ,CAACP,KAAK,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IACnCH,CAAC,GAAGE,QAAQ,CAACP,KAAK,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EACvC;EACA,OAAO,OAAO,CAACC,MAAM,CAACN,CAAC,EAAE,IAAI,CAAC,CAACM,MAAM,CAACL,CAAC,EAAE,IAAI,CAAC,CAACK,MAAM,CAACJ,CAAC,EAAE,GAAG,CAAC;AACjE,CAAC;AAED,SAASN,QAAQ,IAAIW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}